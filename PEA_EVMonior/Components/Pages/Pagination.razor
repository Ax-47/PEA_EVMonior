

@code {
    [Parameter] public int TotalItems { get; set; }
    [Parameter] public int ItemsPerPage { get; set; }
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }
    private int CurrentPage { get; set; } = 1;
    private int TotalPages => (int)Math.Ceiling((double)TotalItems / ItemsPerPage);

    private async Task SelectPage(int page)
    {
        if (page < 1 || page > TotalPages)
            return;

        CurrentPage = page;
        await OnPageChanged.InvokeAsync(page);
    }
}

<div class="pagination">
    <button @onclick="() => SelectPage(CurrentPage - 1)" disabled="@(CurrentPage == 1)">Previous</button>
    @for (int i = 1; i <= TotalPages; i++)
    {
        <button @onclick="() => SelectPage(i)" class="@(CurrentPage == i ? "active" : "")">@i</button>
    }
    <button @onclick="() => SelectPage(CurrentPage + 1)" disabled="@(CurrentPage == TotalPages)">Next</button>
</div>

<style>
    .pagination button.active {
        font-weight: bold;
    }
</style>